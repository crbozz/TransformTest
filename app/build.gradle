apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "org.sidia.transformtest"
        minSdkVersion 24
        targetSdkVersion 27
        ndk {
            if (rootProject.hasProperty("ARM64")) {
                abiFilters = ['arm64-v8a']
            } else {
                abiFilters = ['armeabi-v7a']
            }
        }
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // ignore the arm-v8 bullet library file
    packagingOptions {
        pickFirst 'lib/*/libc++_shared.so'
        pickFirst 'lib/*/libgnustl_shared.so'
        if (!project.hasProperty("ARM64")) {
            exclude 'lib/arm64-v8a/*.so'
        } else {
            exclude 'lib/armeabi-v7a/*.so'
        }
    }
}

project.ext.gearvrfVersion = '4.0.1-SNAPSHOT'
project.ext.jomlVersion = "1.9.3-SNAPSHOT"

dependencies {
    if(project.hasProperty("useLocalDependencies") && project.useLocalDependencies) {
        debugImplementation(name: 'framework-debug', ext: 'aar')
        releaseImplementation(name: 'framework-release', ext: 'aar')
        debugImplementation(name: 'backend_daydream-debug', ext: 'aar')
        releaseImplementation(name: 'backend_daydream-release', ext: 'aar')
        debugImplementation(name: 'backend_oculus-debug', ext: 'aar')
        releaseImplementation(name: 'backend_oculus-release', ext: 'aar')
    } else {
        implementation "org.gearvrf:backend_oculus:$gearvrfVersion"
        implementation "org.gearvrf:framework:$gearvrfVersion"
    }

    implementation 'org.joml:joml-android:1.9.3-SNAPSHOT'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
}
